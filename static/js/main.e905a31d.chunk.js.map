{"version":3,"sources":["ChildArea.jsx","App.js","index.js"],"names":["style","width","height","backgroundColor","ChildArea","memo","props","open","onClickClose","console","log","Array","keys","forEach","onClick","App","useState","text","setText","setOpen","useCallback","temp","useMemo","className","value","onChange","e","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMAEMA,EAAQ,CACZC,MAAO,OACPC,OAAQ,QACRC,gBAAiB,SAGNC,EAAYC,gBAAK,SAACC,GAC7B,IAAQC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,aAQd,OAPAC,QAAQC,IAAI,2EAEF,YAAOC,MAAM,KAAMC,QACxBC,SAAQ,WACXJ,QAAQC,IAAI,UAIZ,mCACGH,EACC,sBAAKP,MAAOA,EAAZ,UACE,iFACA,wBAAQc,QAASN,EAAjB,mCAEA,U,MCpBK,SAASO,IACtBN,QAAQC,IAAI,OACZ,MAAwBM,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,oBAAS,GAAjC,mBAAOT,EAAP,KAAaY,EAAb,KAMMX,EAAeY,uBAAY,kBAAMD,GAAQ,KAAQ,CAACA,IAElDE,EAAOC,mBAAQ,kBAAM,IAAO,IAGlC,OAFAb,QAAQC,IAAIW,GAGV,sBAAKE,UAAU,MAAf,UACE,uBAAOC,MAAOP,EAAMQ,SAXH,SAACC,GAAD,OAAOR,EAAQQ,EAAEC,OAAOH,UAYzC,uBACA,uBACA,wBAAQV,QAZQ,kBAAMK,GAASZ,IAY/B,0BACA,cAACH,EAAD,CAAWG,KAAMA,EAAMC,aAAcA,OCnB3C,IAAMoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACjB,EAAD,MAEFa,K","file":"static/js/main.e905a31d.chunk.js","sourcesContent":["import { memo } from \"react\";\n\nconst style = {\n  width: \"100%\",\n  height: \"200px\",\n  backgroundColor: \"khaki\"\n};\n\nexport const ChildArea = memo((props) => {\n  const { open, onClickClose } = props;\n  console.log(\"ChildAreaがレンダリングされた!!\");\n\n  const data = [...Array(2000).keys()];\n  data.forEach(() => {\n    console.log(\"...\");\n  });\n\n  return (\n    <>\n      {open ? (\n        <div style={style}>\n          <p>子コンポーネント</p>\n          <button onClick={onClickClose}>閉じる</button>\n        </div>\n      ) : null}\n    </>\n  );\n});\n","import { useCallback, useState, useMemo } from \"react\";\nimport { ChildArea } from \"./ChildArea\";\nimport \"./styles.css\";\n\nexport default function App() {\n  console.log(\"App\");\n  const [text, setText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const onChangeText = (e) => setText(e.target.value);\n\n  const onClickOpen = () => setOpen(!open);\n\n  const onClickClose = useCallback(() => setOpen(false), [setOpen]);\n\n  const temp = useMemo(() => 1 + 3, []);\n  console.log(temp);\n\n  return (\n    <div className=\"App\">\n      <input value={text} onChange={onChangeText} />\n      <br />\n      <br />\n      <button onClick={onClickOpen}>表示</button>\n      <ChildArea open={open} onClickClose={onClickClose} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}